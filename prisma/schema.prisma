// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @unique @db.Char(36)
  name      String   @db.VarChar(20)
  nickname  String   @unique @db.VarChar(20)
  createdAt DateTime @default(now()) @db.Timestamptz(3)

  posts        Post[]
  PostLikes    PostLikes[]
}

model Post {
  id            Int      @id @default(autoincrement())
  content       String   @db.VarChar(280)
  likesCount    Int      @default(0)
  viewsCont     Int      @default(0)
  commentsCount Int      @default(0)
  createdAt     DateTime @default(now()) @db.Timestamptz(3)
  updatedAt     DateTime @default(now()) @updatedAt @db.Timestamptz(3)

  user         User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String         @db.Char(36)

  PostLikes    PostLikes[]
}



model PostLikes {
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId Int
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @db.Char(36)

  @@id([postId, userId])
}
